// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// dmat
NumericMatrix dmat(NumericVector id, NumericVector time, IntegerVector result, double phi1, double phi0, double negpred);
RcppExport SEXP icRSF_dmat(SEXP idSEXP, SEXP timeSEXP, SEXP resultSEXP, SEXP phi1SEXP, SEXP phi0SEXP, SEXP negpredSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type result(resultSEXP);
    Rcpp::traits::input_parameter< double >::type phi1(phi1SEXP);
    Rcpp::traits::input_parameter< double >::type phi0(phi0SEXP);
    Rcpp::traits::input_parameter< double >::type negpred(negpredSEXP);
    rcpp_result_gen = Rcpp::wrap(dmat(id, time, result, phi1, phi0, negpred));
    return rcpp_result_gen;
END_RCPP
}
// getrids
IntegerVector getrids(NumericVector id, int nsub);
RcppExport SEXP icRSF_getrids(SEXP idSEXP, SEXP nsubSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type nsub(nsubSEXP);
    rcpp_result_gen = Rcpp::wrap(getrids(id, nsub));
    return rcpp_result_gen;
END_RCPP
}
// timeMat
NumericMatrix timeMat(int nsub, int J, NumericVector time, NumericVector utime, NumericMatrix Xmat);
RcppExport SEXP icRSF_timeMat(SEXP nsubSEXP, SEXP JSEXP, SEXP timeSEXP, SEXP utimeSEXP, SEXP XmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsub(nsubSEXP);
    Rcpp::traits::input_parameter< int >::type J(JSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type utime(utimeSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xmat(XmatSEXP);
    rcpp_result_gen = Rcpp::wrap(timeMat(nsub, J, time, utime, Xmat));
    return rcpp_result_gen;
END_RCPP
}
// loglikC
double loglikC(NumericVector parm, NumericMatrix Dmat, NumericVector x);
RcppExport SEXP icRSF_loglikC(SEXP parmSEXP, SEXP DmatSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type parm(parmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Dmat(DmatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(loglikC(parm, Dmat, x));
    return rcpp_result_gen;
END_RCPP
}
// gradlikC
NumericVector gradlikC(NumericVector parm, NumericMatrix Dmat, NumericVector x);
RcppExport SEXP icRSF_gradlikC(SEXP parmSEXP, SEXP DmatSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type parm(parmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Dmat(DmatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(gradlikC(parm, Dmat, x));
    return rcpp_result_gen;
END_RCPP
}
// loglikCD
double loglikCD(NumericVector parm, NumericMatrix Dmat, NumericVector x);
RcppExport SEXP icRSF_loglikCD(SEXP parmSEXP, SEXP DmatSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type parm(parmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Dmat(DmatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(loglikCD(parm, Dmat, x));
    return rcpp_result_gen;
END_RCPP
}
// gradlikCD
NumericVector gradlikCD(NumericVector parm, NumericMatrix Dmat, NumericVector x);
RcppExport SEXP icRSF_gradlikCD(SEXP parmSEXP, SEXP DmatSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type parm(parmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Dmat(DmatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(gradlikCD(parm, Dmat, x));
    return rcpp_result_gen;
END_RCPP
}
// loglikCD0
double loglikCD0(NumericVector parm, NumericMatrix Dmat);
RcppExport SEXP icRSF_loglikCD0(SEXP parmSEXP, SEXP DmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type parm(parmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Dmat(DmatSEXP);
    rcpp_result_gen = Rcpp::wrap(loglikCD0(parm, Dmat));
    return rcpp_result_gen;
END_RCPP
}
// loglikC0
double loglikC0(NumericVector parm, NumericMatrix Dmat);
RcppExport SEXP icRSF_loglikC0(SEXP parmSEXP, SEXP DmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type parm(parmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Dmat(DmatSEXP);
    rcpp_result_gen = Rcpp::wrap(loglikC0(parm, Dmat));
    return rcpp_result_gen;
END_RCPP
}
// gradlikCD0
NumericVector gradlikCD0(NumericVector parm, NumericMatrix Dmat);
RcppExport SEXP icRSF_gradlikCD0(SEXP parmSEXP, SEXP DmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type parm(parmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Dmat(DmatSEXP);
    rcpp_result_gen = Rcpp::wrap(gradlikCD0(parm, Dmat));
    return rcpp_result_gen;
END_RCPP
}
// gradlikC0
NumericVector gradlikC0(NumericVector parm, NumericMatrix Dmat);
RcppExport SEXP icRSF_gradlikC0(SEXP parmSEXP, SEXP DmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type parm(parmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Dmat(DmatSEXP);
    rcpp_result_gen = Rcpp::wrap(gradlikC0(parm, Dmat));
    return rcpp_result_gen;
END_RCPP
}
// splitpointC
NumericVector splitpointC(NumericMatrix Dm, NumericVector x, Function f);
RcppExport SEXP icRSF_splitpointC(SEXP DmSEXP, SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Dm(DmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(splitpointC(Dm, x, f));
    return rcpp_result_gen;
END_RCPP
}
// splitpointCD
NumericVector splitpointCD(NumericMatrix Dm, NumericVector x, Function f);
RcppExport SEXP icRSF_splitpointCD(SEXP DmSEXP, SEXP xSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Dm(DmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(splitpointCD(Dm, x, f));
    return rcpp_result_gen;
END_RCPP
}
// bestsplitC
List bestsplitC(NumericMatrix Dm, NumericMatrix Xmat, Function f);
RcppExport SEXP icRSF_bestsplitC(SEXP DmSEXP, SEXP XmatSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Dm(DmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(bestsplitC(Dm, Xmat, f));
    return rcpp_result_gen;
END_RCPP
}
// bestsplitCD
List bestsplitCD(NumericMatrix Dm, NumericMatrix Xmat, Function f);
RcppExport SEXP icRSF_bestsplitCD(SEXP DmSEXP, SEXP XmatSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Dm(DmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(bestsplitCD(Dm, Xmat, f));
    return rcpp_result_gen;
END_RCPP
}
// scorefun
double scorefun(double beta, NumericVector x, NumericVector parm, NumericMatrix Dmat);
RcppExport SEXP icRSF_scorefun(SEXP betaSEXP, SEXP xSEXP, SEXP parmSEXP, SEXP DmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type parm(parmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Dmat(DmatSEXP);
    rcpp_result_gen = Rcpp::wrap(scorefun(beta, x, parm, Dmat));
    return rcpp_result_gen;
END_RCPP
}
// scorefun0
double scorefun0(NumericVector x, NumericVector parm, NumericMatrix Dmat);
RcppExport SEXP icRSF_scorefun0(SEXP xSEXP, SEXP parmSEXP, SEXP DmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type parm(parmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Dmat(DmatSEXP);
    rcpp_result_gen = Rcpp::wrap(scorefun0(x, parm, Dmat));
    return rcpp_result_gen;
END_RCPP
}
// splitpt
NumericVector splitpt(NumericMatrix Dmat, NumericVector x, NumericVector parm);
RcppExport SEXP icRSF_splitpt(SEXP DmatSEXP, SEXP xSEXP, SEXP parmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Dmat(DmatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type parm(parmSEXP);
    rcpp_result_gen = Rcpp::wrap(splitpt(Dmat, x, parm));
    return rcpp_result_gen;
END_RCPP
}
// bsplitC
List bsplitC(NumericMatrix Dmat, NumericMatrix Xmat, NumericVector parm);
RcppExport SEXP icRSF_bsplitC(SEXP DmatSEXP, SEXP XmatSEXP, SEXP parmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Dmat(DmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type parm(parmSEXP);
    rcpp_result_gen = Rcpp::wrap(bsplitC(Dmat, Xmat, parm));
    return rcpp_result_gen;
END_RCPP
}
